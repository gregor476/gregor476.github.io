{"version":3,"sources":["Images/whattowear.png","Images/ships.png","Images/mb3.png","Images/ph1.jpg","Images/mm1.png","Images/osu.PNG","Images/ph2.png","Images/mb1.png","Images/mb2.png","Images/capstone.PNG","Components/Title.js","Components/Cards.js","Components/Body.js","Components/Navbar.js","Pages/style.js","Pages/musicmagik.js","Pages/whattowear.js","Pages/purehoney.js","Pages/ships.js","Pages/masterblaster.js","Pages/capstone.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleDiv","styled","div","Terminal","Dr","File","a","Words","Grid","TopBar","TextBox","input","Helper","Dot","span","props","css","color","Title","state","curTime","Date","toLocaleString","Fragment","this","activeClass","to","spy","smooth","offset","duration","href","target","autoFocus","onfocus","React","Component","CardArea","Card","NavLink","Img","img","CardDescription","needSpace","Cards","src","osu","mb3","ph1","mm1","ships","whattowear","Core","Section","Header","Flavor","Text","Link","Buttons","ul","HotButton","button","Disclaimer","Input_","Text_","textarea","Submit_","Body","subject","body","handleSubject","bind","handleBody","event","setState","value","id","placeholder","onChange","rows","Item","BottomShadow","Navbar","listenToScroll","scrolled","document","scrollTop","documentElement","scrollHeight","clientHeight","theposition","console","log","window","addEventListener","removeEventListener","TitleBar","PTitle","Portal","iframe","Tools","MusicMajik","scrollTo","width","height","WhatToWear","PureHoney","ph2","Ships","frameborder","allow","MasterBlaster","mb1","mb2","Capstone","capstone","App","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.404e4067.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whattowear.14c86f32.png\";","module.exports = __webpack_public_path__ + \"static/media/ships.3b8d9c94.png\";","module.exports = __webpack_public_path__ + \"static/media/mb3.dd77f30a.png\";","module.exports = __webpack_public_path__ + \"static/media/ph1.5cb398df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mm1.d5010bba.png\";","module.exports = __webpack_public_path__ + \"static/media/osu.52007569.PNG\";","module.exports = __webpack_public_path__ + \"static/media/ph2.86d930c3.png\";","module.exports = __webpack_public_path__ + \"static/media/mb1.316bfe68.png\";","module.exports = __webpack_public_path__ + \"static/media/mb2.096bb49f.png\";","module.exports = __webpack_public_path__ + \"static/media/capstone.95887a8c.PNG\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst TitleDiv = styled.div `\r\n  position: fixed;\r\n  color: white;\r\n  top: 0px;\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: block;\r\n  font-weight: 800;\r\n  \r\n  text-decoration:none;\r\n  background-color: #00a3f5;  \r\n`;\r\n\r\nconst Terminal = styled.div`\r\n  position: fixed;\r\n  top: 20%;\r\n  left: 15%;\r\n  height: 60%;\r\n  margin: auto;\r\n  width: 70%;\r\n  background-color: black;  \r\n  border-radius: 8px;\r\n  @media(max-width: 768px) {\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    margin: 0 auto;\r\n    height: 450px;\r\n  }\r\n`;\r\nconst Dr = styled.div`\r\n  color: #73a6ff;\r\n  display: block;\r\n  width: 200px;\r\n  height: 50px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n  @media(max-width: 768px) {\r\n    width: 200px;\r\n    margin: 20px;\r\n    margin-left: 0;\r\n    height: 10px;\r\n  }\r\n  \r\n`;\r\nconst File = styled.a`\r\n  text-decoration: none;\r\n  margin-right: 40px;\r\n  color: #86ff57;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n  @media(max-width: 768px) {\r\n    margin: 20px;\r\n    margin-left: 0;\r\n    width: 100%;\r\n    height: 10px;\r\n  }\r\n`;\r\nconst Words = styled.div`\r\n  line-height: 100%;\r\n  font-size: 28px;\r\n  margin: -10px 20px;\r\n  padding: 0;\r\n  font-family: 'Source Code Pro', monospace;\r\n  @media(max-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst Grid = styled.div `\r\n  width: 600px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  @media(max-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nconst TopBar = styled.div`\r\n  background-color: #2d2d2d;\r\n  width: 100%;\r\n  height: 30px;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  @media(max-width: 768px) {\r\n    height: 20px;\r\n  }\r\n`;\r\nconst TextBox = styled.input `\r\n  width: 20%;\r\n  color: white;\r\n  background-color: black;\r\n  font-size: 28px;\r\n  font-family: 'Source Code Pro', monospace;\r\n  border-style: solid;\r\n  border-color: #363636;\r\n  border-width: 2px;\r\n  border-radius: 6px;\r\n  padding: 4px;\r\n  &:focus {\r\n    border-style: none;\r\n    outline: none;\r\n  }\r\n  @media(max-width: 768px) {\r\n    display: none;\r\n  }\r\n\r\n`;\r\nconst Helper = styled.div `\r\n  posistion: fixed;\r\n  width: 100%;\r\n  height: 30px;\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 36px;\r\n  font-weight: 800;\r\n  padding: 8px;\r\n  margin: 475px auto 0 auto;\r\n  color: white;\r\n  border-radius: 8px;\r\n  @media(max-width: 768px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nconst dynamicStyle = props => \r\n  css`\r\n    background-color: ${props.color};\r\n  `;\r\n\r\nconst Dot = styled.span`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin: 6px;\r\n  ${dynamicStyle};\r\n  @media(max-width: 768px) {\r\n    height: 15px;\r\n    width: 15px;\r\n    margin: 3px;\r\n  }\r\n`;\r\nclass Title extends React.Component {\r\n  state={curTime : new Date().toLocaleString()}\r\n\r\n\r\n  render () {\r\n    return (\r\n    <React.Fragment>\r\n      <TitleDiv>\r\n        <Helper>Or just scroll</Helper>\r\n        <Terminal>\r\n          <TopBar>\r\n            <Dot color=\"#ff4036\"/>\r\n            <Dot color=\"#e5c02a\"/>\r\n            <Dot color=\"#55c22a\"/>\r\n          </TopBar>\r\n          <Words>\r\n            <p>Last Login: {this.state.curTime} on console</p>\r\n            <p>Your-Machine:~ main$ ls </p>\r\n            <Grid>\r\n              <Link\r\n                      activeClass=\"active\"\r\n                      to=\"about\"\r\n                      spy={true}\r\n                      smooth={true}\r\n                      offset={0}\r\n                      duration={400}>\r\n              <Dr>about</Dr>\r\n              </Link>\r\n              <Link\r\n                      activeClass=\"active\"\r\n                      to=\"projects\"\r\n                      spy={true}\r\n                      smooth={true}\r\n                      offset={0}\r\n                      duration={400}>\r\n              <Dr>projects</Dr>\r\n              </Link>\r\n              <Link\r\n                      activeClass=\"active\"\r\n                      to=\"contact\"\r\n                      spy={true}\r\n                      smooth={true}\r\n                      offset={0}\r\n                      duration={400}>\r\n              <Dr>contact</Dr>\r\n              </Link>\r\n              <File href=\"https://github.com/gregoryblood/gregoryblood.github.io/blob/master/website/resume.pdf\" target=\"_blank\">resume.pdf</File>\r\n              <File href = \"mailto: gregoryblood1998@gmail.com\">e-mail.exe</File>\r\n            \r\n            </Grid>\r\n            <br/>\r\n            <p>Your-Machine:~ main$ <TextBox autoFocus=\"autofocus\" onfocus=\"this.select()\"></TextBox></p>\r\n            \r\n\r\n          </Words>\r\n        </Terminal>\r\n\r\n      </TitleDiv>\r\n      \r\n      \r\n    </React.Fragment>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport whattowear from '../Images/whattowear.png';\r\nimport ships from '../Images/ships.png';\r\nimport mb3 from '../Images/mb3.png';\r\nimport ph1 from '../Images/ph1.jpg';\r\nimport mm1 from '../Images/mm1.png';\r\nimport osu from '../Images/osu.PNG';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CardArea = styled.div`\r\n  display: flexbox;\r\n  display:-webkit-flex;\r\n  flex-wrap: wrap;\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  align-items: center;\r\n\r\n  @media(max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\nconst Card = styled(NavLink)`\r\n  text-decoration: none;\r\n  background: transparent;\r\n  width: 300px;\r\n  height: 200px;\r\n  display: block;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Img = styled.img `\r\n  position: relative;\r\n  z-index: 2;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  transition-duration: 0.6s;\r\n  -webkit-transition-duration: 0.6s;\r\n  object-fit: cover;\r\n  &:hover {\r\n    opacity: 0.35;\r\n    filter: blur(8px);\r\n    -webkit-filter: blur(4px);\r\n  }\r\n  \r\n`;\r\nconst CardTitle = styled.div `\r\n  z-index: 1;\r\n  position: relative;\r\n  top: -80%;\r\n  font-size: 28px;\r\n  font-weight: 800;\r\n  color: black;\r\n`;\r\nconst CardDescription = styled.div `\r\n  z-index: 1;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  font-size: 32px;\r\n  display: block;\r\n  text-align: center;\r\n  top: ${props => props.needSpace ? '-80%' : '-75%'};\r\n  font-weight: 1000;\r\n  color: black;\r\n`;\r\n\r\nfunction Cards() {  \r\n  return (\r\n    <CardArea>\r\n        <Card to={`/capstone`}>\r\n          <Img src={ osu }/>\r\n          <CardDescription>\r\n          The 'I' in 'Team'\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/masterblaster`}>\r\n          <Img src={ mb3 }/>\r\n          <CardDescription>\r\n          A Retro Game with a Twist\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/purehoney`}>\r\n          <Img src={ph1}/>\r\n          <CardDescription>\r\n          A Website to Buy Honey\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/musicmajik`}>\r\n          <Img src={mm1}/>\r\n          <CardDescription>\r\n          Organize your Music... Fast\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/ships`}>\r\n          <Img src={ships}/>\r\n          <CardDescription>\r\n          A Party Game for Pirates\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/whattowear`}>\r\n          <Img src={whattowear}/>\r\n          <CardDescription needSpace>\r\n          The Most Fail-Safe Weather App\r\n          </CardDescription>\r\n        </Card>\r\n        \r\n        {/*\r\n        <Card to={`/whattowear`}>\r\n          <Img src={whattowear}/>\r\n          <CardTitle>Oblivion</CardTitle>\r\n          <CardDescription>\r\n          Physics, puzzles, horror.\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/whattowear`}>\r\n          <Img src={whattowear}/>\r\n          <CardTitle>Nature Simulation</CardTitle>\r\n          <CardDescription>\r\n          Nature simulating machine learning\r\n          </CardDescription>\r\n        </Card>\r\n        <Card to={`/whattowear`}>\r\n          <Img src={whattowear}/>\r\n          <CardTitle>Affair of Honor</CardTitle>\r\n          <CardDescription>\r\n          A party game for competitive people\r\n          </CardDescription>\r\n        </Card>\r\n        \r\n        */}\r\n        \r\n    </CardArea>\r\n  );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Cards from './Cards';\r\n\r\nconst color = 'white';\r\nconst mainText = 'black';\r\nconst flavorText = \"gray\"\r\nconst flavorColor = \"#20a3fa\"\r\n\r\nconst Core = styled.div `\r\n  position: relative;\r\n  top: 91vh;\r\n  margin: 40px auto 0 auto;\r\n  padding: 0 0 200px 0;\r\n  width: 100%;\r\n  background: ${color};\r\n  box-shadow: 0px -12px 24px 0px rgba(0,0,0,0.6);\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n`;\r\nconst Section = styled.div `\r\n  margin: 40px auto 40px auto;\r\n  padding 50px 20px;\r\n  overflow: visible;\r\n  max-width: 900px;\r\n  color: ${mainText};\r\n\r\n`;\r\nconst Header = styled.div `\r\n  font-weight: 800;\r\n  font-size: 36px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  @media(max-width: 768px) {\r\n    text-align: left;\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst Flavor = styled.div `\r\n  padding: 10px 0;\r\n  font-size: 20px;\r\n  font-style: italic;\r\n  color: ${flavorText};\r\n  text-align: center;\r\n  @media(max-width: 768px) {\r\n    text-align: left;\r\n  }\r\n`;\r\nconst Text = styled.div `\r\n  font-size: 24px;\r\n`;\r\nconst CardArea = styled.div `\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\nexport const Link = styled.a `\r\n  text-decoration: none;\r\n  color: ${flavorColor};\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\nexport const Buttons = styled.ul `\r\n  list-style-type: none;\r\n  margin: 40px 0 0 0;\r\n  overflow: visible;\r\n  text-align: center;\r\n`;\r\nexport const HotButton = styled.button `\r\n  text-decoration: none;\r\n  border-style: solid;\r\n  border-color: white;\r\n  border-width: 4px;\r\n  border-radius: 8px;\r\n  \r\n  display: inline-block;\r\n  padding: 30px 50px;\r\n  font-size: 22px;\r\n  color: white;\r\n  background-color: #1c1c1c;\r\n  width: 200px;\r\n  margin: 20px 40px 0 0px;\r\n  outline:none;\r\n  transition-duration: 0.4s;\r\n  -webkit-transition-duration: 0.4s;\r\n  &:hover {\r\n    cursor: pointer;\r\n    border-color: ${flavorColor};\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n`;\r\nexport const Disclaimer = styled.div `\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: red;\r\n  text-align: center;\r\n  padding: 40px 0;\r\n`;\r\nconst Input_ = styled.input `\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 2px solid ${flavorColor};\r\n  border-radius: 8px;\r\n  font-size: 24px;\r\n  margin: 10px 0;\r\n  padding: 4px 0px 4px 0px;\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`;\r\nconst Text_ = styled.textarea `\r\n  width: 100%;\r\n  height: 80px;\r\n  border: 2px solid ${flavorColor};\r\n  font-weight: 600;\r\n  font-family: inherit;\r\n  border-radius: 8px;\r\n  font-size: 24px;\r\n  margin: 10px 0;\r\n  padding: 4px 0px 4px 0px;\r\n  resize: none;\r\n  overflow: auto;\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`;\r\nconst Submit_ = styled.a `\r\n  display: block;\r\n  text-align: center;\r\n  width: 100%;\r\n  border: 2px solid ${flavorColor};\r\n  border-radius: 8px;\r\n  background: white;\r\n  margin: 20px auto;\r\n  padding: 10px 0;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  color: black;\r\n  text-decoration: none;\r\n  transition-duration: 0.4s;\r\n  -webkit-transition-duration: 0.4s;\r\n  &:hover {\r\n    background-color: ${flavorColor};\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport class Body extends React.Component{  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subject: '',\r\n      body: '',\r\n    };\r\n    this.handleSubject = this.handleSubject.bind(this);\r\n    this.handleBody = this.handleBody.bind(this);\r\n  }\r\n\r\n  \r\n  handleSubject(event) {\r\n    this.setState({subject: event.target.value});\r\n  }\r\n  handleBody(event) {\r\n    this.setState({body: event.target.value});\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <Core>\r\n          <Section id=\"about\">\r\n            <Header>Who am I?</Header>\r\n            <Flavor>Half human, half code monkey...</Flavor>\r\n            <Text>\r\n              I am a Senior at <Link href={'https://oregonstate.edu/'} target={'_blank'}>Oregon State University</Link> studying \r\n              Computer Science and I am eager to work in teams, and eventually lead them, to solve real world problems.<br/><br/>\r\n              When I am away from the computer I enjoy fishing, camping, and thinking about my \r\n              computer. I also spend my free time making games with Unity or playing \r\n              them with my friends.<br/><br/>\r\n              Check out my resumé for some technologies I have been working with.\r\n            </Text>\r\n            <Buttons>\r\n              <a href=\"https://github.com/gregoryblood/gregoryblood.github.io/blob/master/website/resume.pdf\" target=\"_blank\"><HotButton>Resumé</HotButton></a>\r\n              <a href=\"https://www.linkedin.com/in/gregoryblood\" target=\"_blank\"><HotButton>LinkedIn</HotButton></a>\r\n              <a href=\"https://github.com/gregoryblood\" target=\"_blank\"><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n          </Section>\r\n          <Section id=\"projects\">\r\n            <Header>What have I worked on?</Header>\r\n            <Flavor>A bit of this, a byte of that...</Flavor>\r\n            <Disclaimer>I'm still working on uploading my projects</Disclaimer>\r\n            <CardArea>\r\n              <Cards/>\r\n            </CardArea>\r\n          </Section>\r\n          <Section id=\"contact\">\r\n            <Header>Send me a message!</Header>\r\n            <Flavor>Especially if you have a job opportunity...</Flavor>\r\n            <Text>Have a comment on the website? Have a specific question? Just want to talk? Email me!</Text>\r\n              <Input_ value = {this.state.value} placeholder='Subject' onChange={this.handleSubject}/><br/>\r\n              <Text_ rows=\"4\" value={this.state.value} placeholder= 'Body' onChange={this.handleBody}/>\r\n            <Submit_ href={`mailto: gregoryblood1998@gmail.com?subject=${this.state.subject}&body=${this.state.body}`}>Send!</Submit_> \r\n          </Section>\r\n        </Core>\r\n      </React.Fragment>\r\n      \r\n    );\r\n\r\n  };\r\n}\r\n\r\nexport default Body;\r\n","import React, {useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Link } from \"react-scroll\";\r\n\r\n\r\nconst Item = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    text-decoration: none;\r\n    display: block;\r\n    color: #00a3f5;\r\n    text-align: center;\r\n    font-size: 48px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    border-color: #00a3f5;\r\n    border-width: 4px;\r\n    height: 30px;\r\n    width: 30px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    line-height: 23%;\r\n    z-index: 10;\r\n    transition-duration: 0.4s;\r\n    -webkit-transition-duration: 0.4s;\r\n    @media(min-width: 769px) {\r\n        top: 15px;\r\n        right: 10px;\r\n        &:hover {\r\n            background-color: #00a3f5;\r\n            color: white;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    @media(max-width: 768px) {\r\n        bottom: 35px;\r\n        left: 7px;\r\n    }\r\n`;\r\nconst BottomShadow= styled.div`\r\n    position: fixed;\r\n    box-shadow: 0 -16px 16px 16px white;\r\n    width: 100%;\r\n    top: 102vh;\r\n    z-index: 10;\r\n    background: red;\r\n    height: 10px;\r\n`;\r\nexport class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { theposition: 0 };\r\n      }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.listenToScroll)\r\n      }\r\n      \r\n      componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.listenToScroll)\r\n      }\r\n      \r\n      listenToScroll = () => {\r\n        const winScroll =\r\n          document.body.scrollTop || document.documentElement.scrollTop\r\n      \r\n        const height =\r\n          document.documentElement.scrollHeight -\r\n          document.documentElement.clientHeight\r\n      \r\n        const scrolled = winScroll / height\r\n      \r\n        this.setState({\r\n          theposition: scrolled,\r\n        })\r\n        if (this.state.theposition > 0.1) {\r\n            console.log (\"here\");\r\n        }\r\n      }\r\n    render () {\r\n        if (this.state.theposition > 0.1)\r\n        return (\r\n            <React.Fragment>\r\n                <Link\r\n                        activeClass=\"top\"\r\n                        to=\"top\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={0}\r\n                        duration={500}>\r\n                        <Item><div>^ I</div></Item>\r\n                        <BottomShadow/>\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n\r\n        else {\r\n            return (\r\n            <React.Fragment>\r\n\r\n            </React.Fragment>\r\n            )\r\n        }\r\n    }; \r\n}\r\n\r\nexport default Navbar;","import styled from '@emotion/styled'\r\n\r\nexport const Core = styled.div `\r\n    top: 100px;\r\n    position: relative;\r\n    margin: 40px auto 0 auto;\r\n    border-top-left-radius: 8px;\r\n    border-top-right-radius: 8px;\r\n    background: white;\r\n    overflow: visible;\r\n    width: 100%;\r\n`;\r\nexport  const Body = styled.div `\r\n    padding: 20px 20px 200px 20px;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n`;\r\nexport const TitleBar = styled.div `\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #20a3fa;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    \r\n`;\r\nexport const PTitle = styled.div `\r\n    font-size: 54px;\r\n    font-weight: 800;\r\n    color: white;\r\n    padding: 20px 20px 0 20px;\r\n    @media(max-width: 768px) {\r\n        text-align: center;\r\n        font-size: 36px;\r\n    }\r\n`;\r\nexport const Header = styled.div `\r\n    color: #20a3fa;\r\n    font-size: 36px;\r\n    margin: 25px 0 10px 0;\r\n`;\r\nexport const Text = styled.div `\r\n    font-size: 24px;\r\n`;\r\nexport const Flavor = styled.div `\r\n    padding: 0px 0 10px 0;\r\n    font-size: 24px;\r\n    font-style: italic;\r\n    color: white;\r\n    padding: 0px 20px 20px 20px;\r\n    @media(max-width: 768px) {\r\n        text-align: center;\r\n        font-size: 24px;\r\n    }\r\n`;\r\nexport const Portal = styled.iframe `\r\n    margin: 30px auto 30px auto;\r\n    display: block;\r\n    width: 90%;\r\n    max-width: 800px;\r\n    border-style: solid;\r\n    border-width: 2px;\r\n    border-color: black;\r\n    border-radius: 8px;\r\n    \r\n`;\r\nexport const Img = styled.img `\r\n    margin: 30px auto 30px auto;\r\n    display: block;\r\n    width: 90%;\r\n    max-width: 800px;\r\n    border-style: solid;\r\n    border-color: black;\r\n    border-width: 2px;\r\n    border-radius: 8px;\r\n    \r\n`;\r\nexport const Tools = styled.div`\r\n    margin: 10px 0; \r\n    font-style: italic;\r\n    color: #525252;\r\n    font-size: 18px;\r\n`;\r\n","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text} from './style';\r\nimport {Buttons, HotButton, Disclaimer} from '../Components/Body';\r\n\r\nexport class MusicMajik extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>Music Magik</PTitle>\r\n          <Flavor>Organize you music... Fast...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n            <Disclaimer>This takes a moment to load</Disclaimer>\r\n            <Portal src=\"https://spotify-organizer-web.herokuapp.com/\" width=\"540\" height=\"400\"></Portal>\r\n            <Buttons>\r\n              <a href='https://spotify-organizer-web.herokuapp.com/' target='_blank'><HotButton>Visit</HotButton></a>\r\n              <a href='https://github.com/gregoryblood/spotifyApp' target='_blank'><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>API calls with queries - OAuth - Web hosting with Express</Tools>\r\n            <Text>\r\n              This project was pretty fun for me because I really wanted something to \r\n              sort my playlists. The big challenge was not only hooking up the Spotify \r\n              Authentification, but learning ReactJS while doing it. I knew it would be a \r\n              large project for me to do solo but I was pretty happy with how it turned out.\r\n              It was also fun trying to conform to a design trend while adhering to Spotify's \r\n              logo usages. In the end I really like the look on mobile but wish I drafted \r\n              something different for larger screens. \r\n            </Text>\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>ReactJS (HTML5/CSS3/Javascript) - Express</Tools>\r\n            <Text>\r\n              This app's purpose was to sort the user's Spotify music. I developed it on my own \r\n              using ReactJS as well as an Express server to manage Spotify's authentication process. \r\n              <br/><br/>\r\n              Once logged in, the user can view their top artists and songs as well as their current playlists. \r\n              If they select a playlist they will see all songs with their respective artists. If \r\n              they click the button at the top the app will automatically create a new playlist with \r\n              the same name with a plus sign at the end. That playlist will have all of the same songs \r\n              but they will be sorted by Spotify's interpretation of how energetic the song is. This playlist \r\n              is now visible to the user and does not replace the old playlist. (This is to allow the user \r\n              to decide if they like how it was sorted and so they aren't worried the app will mess something up)\r\n              <br/><br/>\r\n              The Spotify API offers statistics for each song given such as how acoustic it is or how \r\n              vocal it is. I wanted it to make my playlists seem like I sorted with slow songs first and \r\n              high paced songs at the end. I first used BPM to sort but didn't like how it ended up sorting.\r\n              A big issue was some songs started sounding like they were really slow, like AC/DC's Thunderstruck,\r\n              and would pick up later, which I wanted to be towards the beginning of the playlist. I ended up \r\n              sorting by the 'Energy' of the song. Which takes into account multiple factors, including BPM, to \r\n              return a single decimal number for me to sort. \r\n              <br/><br/>\r\n              For the design I tried the trend of Neomorphism. The essence of the trend is to make the screen \r\n              looks like it has soft 3D buttons. I knew that this was going to be hard since I also wanted my app to \r\n              feel like it was part of the Spotify ecosystem. I quickly realized that Spotify's background colors were \r\n              very dark and the design looked best on brighter backgrounds. I settled on a dark navy blue which \r\n              looks a lot better on bright screens. I made the site responsive as well and really enjoyed how it \r\n              turned out on mobile. When I go back to this project I will probably update the overall design \r\n              strategy to make it more 'Spotifyie'.\r\n            </Text>\r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default MusicMajik;","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text} from './style';\r\nimport {Buttons, HotButton} from '../Components/Body';\r\n\r\nexport class WhatToWear extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>WhatToWear</PTitle>\r\n          <Flavor>The Most Fail-Safe Weather App...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n            <Portal src=\"https://www.gregoryblood.me/weatherapi/\" width=\"540\" height=\"450\"></Portal>\r\n            <Buttons>\r\n              <a href='https://www.gregoryblood.me/weatherapi/' target='_blank'><HotButton>Visit</HotButton></a>\r\n              <a href='https://github.com/gregoryblood/gregoryblood.github.io/tree/master/weatherapi' target='_blank'><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>API calls - Geolocation - Website deploying</Tools>\r\n            <Text>\r\n              This was my first site that I wanted to deploy, use, and share. It was \r\n              also the first time I used APIs. It was a lot to learn but it wasn't \r\n               too hard to implement since the project itself was simple. \r\n            </Text>\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>HTML5 - CSS3 - Javascript</Tools>\r\n            <Text>\r\n              This site uses darksky.net's API to gather weather data based on the user's\r\n              device location. Depending on current temperature, the app will generate the\r\n              appropriate clothing to wear. If darksky.net predicts that it will rain anytime \r\n              throughout the day, it will also recommend bringing an umbrella or a raincoat,\r\n              depending on the temperature. \r\n              <br/><br/>\r\n              I made this app because every morning when I check the weather I see something\r\n              like '54 degrees' and I sometimes forget what that feels like and if I need a \r\n              long sleeve or a heavier jacket. I made the app display what to wear in the simplest \r\n              way possible with bold, large text on a simple background. Nothing more. I set the \r\n              website to show up on my phone's home screen and use it every morning. I love creating \r\n              something practical and helpful, even if I'm the only user.\r\n            </Text>\r\n            \r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default WhatToWear;","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text, Img} from './style';\r\nimport {Buttons, HotButton} from '../Components/Body';\r\nimport ph2 from '../Images/ph2.png'\r\n\r\nexport class PureHoney extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>Bear Lake Honey</PTitle>\r\n          <Flavor>A Website to Buy Honey...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n          <Img src={ph2}/>\r\n            <Buttons>\r\n              <a href='https://www.gregoryblood.me/honey/#/' target='_blank'><HotButton>Visit</HotButton></a>\r\n              <a href='https://github.com/gregoryblood/gregoryblood.github.io/tree/master/honey' target='_blank'><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>How to Work with a Client</Tools>\r\n            <Text>\r\n              I was super excited for someone to reach out to me to pay me to build a website for them.\r\n              They were inexperienced with web development and I really enjoyed helping them through the \r\n              process. I loved talking with them about what they wanted and their future plans. Unfortunately  \r\n              after many hours of consultation, design and prototype building. I determined that they didn't \r\n              have the legal requirements to sell honey online. I could have asked for full payment but I determined \r\n              I really enjoyed the process and learned a lot so just let them know how to get permission and will \r\n              charge once they finish that. \r\n            </Text>\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>ReactJS (HTML5/CSS3/Javascript)</Tools>\r\n            <Text>\r\n              A client jarred honey and began to sell it to people they knew. They decided they wanted to \r\n              make some extra money and sell it to more people. To do this they reached out to me to build \r\n              them a website. Their original idea was a full-stack website that tracked inventory and could \r\n              do the purchasing of honey without the use of a third party. While I was excited to take on the \r\n              challenge, I told them they could minimize upfront costs (my hourly labor fee) by selling the \r\n              honey on Amazon and for me to build more of an info page she could share that linked to Amazon. \r\n              If they sold enough honey, I could always upgrade the website.\r\n              <br/><br/>\r\n              Once we settled on our strategy, I began to make some drafts. I created four templates in AdobeXD \r\n              each with different styles and asked them what they liked and disliked about each one. Taking in that \r\n              input I created another draft that they later approved. With the design decided it was just left to me \r\n              to build it. I went with ReactJS since it might have been built more upon. \r\n              <br/><br/>\r\n              Once built I begin to look into selling honey on Amazon. I quickly realized that you need a license \r\n              to sell cottage foods. (Non-potentially hazardous foods that do not require time and/or temperature controls for safety)\r\n              I told them about their local laws and am currently waiting for them to finish that process. \r\n            </Text>\r\n            \r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default PureHoney;","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text, Img} from './style';\r\nimport {Buttons, HotButton} from '../Components/Body';\r\n\r\nexport class Ships extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>Ships!</PTitle>\r\n          <Flavor>A party game for pirates...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n            <Portal height=\"400\" src=\"https://www.youtube.com/embed/VS7Dm7YzTsQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allow=\"fullscreen\"></Portal>\r\n            <Buttons>\r\n              {\r\n              //<a href='https://www.gregoryblood.me/honey/#/' target='_blank'><HotButton>Visit</HotButton></a>\r\n              }\r\n              <a href='https://github.com/gregoryblood/ships' target='_blank'><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>Interactive Controls - Unity Fundamentals - Gameplay Fundamentals</Tools>\r\n            <Text>\r\n              After following a lot of tutorials for using Unity, I finally felt confident to work on my own project. \r\n              I had an idea in mind to start and just went to work. After a lot of Googling I finished the first \r\n              version, but quickly realized the first build is only a portion of the work. I playtested the game \r\n              with friends and family and learned how to use feedback without losing my vision of the game. \r\n            </Text>\r\n            <Portal height=\"400\" src=\"https://www.youtube.com/embed/DTujndYq82E\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allow=\"fullscreen\"></Portal>\r\n\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>Unity - C#</Tools>\r\n            <Text>\r\n            This game is a 2-4 player party game in which players control a \r\n            pirate ship and must shoot cannons to destroy other ships. \r\n            The niche to the game is that to reload the cannonballs, the \r\n            player must spin a joystick in rotation. The more \r\n            consecutive spins without fire grant more ammo per spin. They can \r\n            fire the cannonballs from either side of the ship, depleting 15 rounds \r\n            per trigger pull a maximum of four times. There's and island that can be \r\n            shot over at the cost of a chance a ball hits the ground and flies \r\n            uncontrollably in the air. \r\n            A player wins when they are the last boat standing.<br/><br/>This game \r\n            has an alternate version where two people control the same boat, \r\n            one person steers and the other shoots and reloads.\r\n            </Text>\r\n            \r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Ships;","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text, Img} from './style';\r\nimport {Buttons, HotButton, Link} from '../Components/Body';\r\nimport mb1 from '../Images/mb1.png';\r\nimport mb2 from '../Images/mb2.png';\r\n\r\nexport class MasterBlaster extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>Master Blaster</PTitle>\r\n          <Flavor>A retro game with a twist...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n            <Img src={mb1}/>\r\n            <Buttons>\r\n              <a href='https://gregoryblood.itch.io/master-blaster' target='_blank'><HotButton>Play!</HotButton></a>  \r\n              {\r\n              //<a href='https://github.com/gregoryblood/' target='_blank'><HotButton>GitHub</HotButton></a>\r\n              }\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>Developing with a Time Limit - Developing with a Theme</Tools>\r\n            <Text>\r\n              This was a bit of a two part game with the first part being in the <Link href=\"https://itch.io/jam/gmtk-2020\">Game Maker's Toolkit game jam</Link>. \r\n              There was a 72 hour time limit with the theme of 'Out of Control. <Link>This version</Link> was created first and boy, \r\n              did I feel a crunch. I could only work on it two days out of the three and had to do all the tricks I knew.\r\n              I quickly just started building just the gameplay not caring about graphics at all. I iterated through a few \r\n              ideas but settled on this asteroid  like game. The theme was a fun way to focus my ideas and it was really fun stretching \r\n              the meaning of the theme.<br/><br/>\r\n              I ended up making the player lose control of their ship after a certain amount of time while simultaneously increasing their fire rate.\r\n              This made the player carefully predict where the ship was going and would point to score points and not lose health. \r\n              <br/><br/>\r\n              I learned an important lesson about accessibility when I didn't realize I could have the game played in the \r\n              browser at the time of my submission. This deterred other competitors from trying and voting for my game. The votes and comments \r\n              I did get were really fun to send I continued to iterate the game afterward.\r\n            </Text>\r\n            <Img src={mb2}/>\r\n\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>Unity - C#</Tools>\r\n            <Text>\r\n              Master Blaster is a classic arcade looking game similiar to astroids. The player starts the game by \r\n              selecting options for their ship (27 combinations total) each complimenting different builds. \r\n              The player controls their ship with a gamepad or WASD and it automatically fires. The hook is if they \r\n              press space or the south gamepad button, their ship loses all acceleration dampening and fires rapidly. While they \r\n              can only spin the ship, it is the strongest way to defeat enemies. \r\n              <br/><br/>\r\n              Their objective is to destroy enemies to increase their score. There are five different enemies each \r\n              having drastically behaviors and mechanics. They are introduced at different point thresholds to increase \r\n              difficulty. At 200, 400, and 600 points, a boss spawns with completely new mechanics and take multiple hits \r\n              to defeat. The game is intended to be infinitely long lasting with increasing difficulty.\r\n              <br/><br/>\r\n              As enemies are destroyed they have a chance to drop coins, that the player can exchange at milestones to \r\n              upgrade their ship/stats. Some of the possible upgrades compliment the choices, or even \r\n              directly upgrade, the choices they made at the beginning. Because of this they can create \r\n              builds that get exponentially stronger.\r\n            </Text>\r\n            \r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default MasterBlaster;","import React from 'react';\r\nimport {PTitle, Body, Core, Header, Flavor, Portal, TitleBar,\r\n        Tools, Text, Img} from './style';\r\nimport {Buttons, HotButton, Link} from '../Components/Body';\r\nimport capstone from '../Images/capstone.PNG'\r\n\r\nexport class Capstone extends React.Component {  \r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span id=\"top\"/>\r\n        <TitleBar>\r\n          <PTitle>Senior Project</PTitle>\r\n          <Flavor>The 'I' in 'Team'...</Flavor>\r\n        </TitleBar>\r\n        <Core>\r\n          <Body>\r\n            \r\n            <Buttons>\r\n              <a href='https://xd.adobe.com/view/8076e940-3750-4138-a939-32692b7e0e67-d525/?fullscreen' target='_blank'><HotButton>Interact</HotButton></a>\r\n              <a href='https://github.com/gregoryblood/Event-Management-App' target='_blank'><HotButton>GitHub</HotButton></a>\r\n            </Buttons>\r\n            <Header>\r\n              What I Learned\r\n            </Header>\r\n            <Tools>How teamwork can make the dream work</Tools>\r\n            <Text>\r\n              This is an on-going project with five people involved. We're making an application \r\n              for a professor at the College of Business at Oregon State to create a better way for \r\n              students and faculty to manage events. I'm working with two other students to get this done \r\n              and we also have help from a TA to make sure we're making progress. I opted to take a leadership \r\n              role for my team because not only was I experienced with how React worked, but I also wanted to \r\n              make this app look and perform like it was made by professionals. <br/><br/>\r\n              I took more control designing the app, you can interact with it above, and I created a timeline \r\n              for our team to finish a working prototype by the end of March. I assigned my team members with \r\n              creating the front-end, since they felt the most comfortable with it, and I get to do the back-end \r\n              which while it is unfamiliar territory, I'm excited to learn the ins and outs.\r\n            </Text>\r\n            <Header>\r\n              About\r\n            </Header>\r\n            <Tools>React Native (Mobile Development) - Express - Postgres (Database) - SQL</Tools>\r\n            <Text>\r\n            This app was for my senior capstone, a 9-month group project. I picked this specific \r\n          project because I wanted to something that I felt challenged me and had a tangable result \r\n          that I would enjoy talking about.<br/><br/>\r\n          Our goal given to us by a professor in the College of Business at Oregon State University was \r\n          to develop an app for the school that streamlines the process for students to find out about events \r\n          going on around the school. We worked closely with the professor to figure out key features of the app and \r\n          the design. Administrators would needed to be identified at login, and have the ability to create/edit/delete \r\n          events. Students could then sign-up for whichever event they want to attend and have their calendar \r\n          updated. \r\n              <br/><br/>\r\n              One of the challenges of this project, and in my opinion the most important, was working closely with \r\n          two other students, a professor, and a teacher's assistant. Because I was the most experienced with \r\n          the kind of development we were doing, I was put in a leadership role.\r\n              <br/><br/>\r\n              I immedietly researched different tools that we would need to learn to accomplish our task. \r\n          I decided to use React Native for the front end since it allowed us to develop for both IOS, \r\n          Android, and web which was ideal since we weren't experienced with app development.\r\n          I then worked closely with the professor to create a <Link href='https://xd.adobe.com/view/8076e940-3750-4138-a939-32692b7e0e67-d525/?fullscreen'>design prototype </Link>\r\n          that would help us plan out the features we would have, the user interface and experience, and helped us \r\n          all be on the page when we would start to develop. <br/><br/>\r\n          To begin development I created a <Link href='https://www.heroku.com/home'>Heroku </Link> server to host an express server.\r\n          Next I started our React Native app and set it up to be able to make API calls. This was mainly to help the group see \r\n          what React frameworks look like. I also set a timeline of the entire app development for us to follow. \r\n            </Text>\r\n            <Img src={capstone}/>\r\n          </Body>\r\n        </Core>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Capstone;","import React from 'react';\r\nimport Title from './Components/Title'\r\nimport Body from './Components/Body'\r\nimport { useRouteMatch, Switch, Route} from 'react-router-dom';\r\nimport Navbar from './Components/Navbar';\r\nimport MusicMajik from './Pages/musicmagik';\r\nimport WhatToWear from './Pages/whattowear';\r\nimport PureHoney from './Pages/purehoney';\r\nimport Ships from './Pages/ships';\r\nimport MasterBlaster from './Pages/masterblaster';\r\nimport Capstone from './Pages/capstone';\r\n\r\n\r\nclass App extends React.Component  {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <Switch>\r\n        <Route path=\"/capstone\">\r\n            <Capstone/>\r\n          </Route>\r\n          <Route path=\"/masterblaster\">\r\n            <MasterBlaster/>\r\n          </Route>\r\n          <Route path=\"/whattowear\">\r\n            <WhatToWear/>\r\n          </Route>\r\n          <Route path=\"/musicmajik\">\r\n            <MusicMajik/>\r\n          </Route>\r\n          <Route path=\"/purehoney\">\r\n            <PureHoney/>\r\n          </Route>\r\n          <Route path=\"/ships\">\r\n            <Ships/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Title/>\r\n            <Body/>\r\n          </Route>\r\n        </Switch>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n//<Navbar/>\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {  HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}