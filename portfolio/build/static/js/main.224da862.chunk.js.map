{"version":3,"sources":["Images/whattowear.png","Images/ships.png","Components/Title.js","Components/Cards.js","Components/Navbar.js","Components/Body.js","Pages/whattowear.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleDiv","styled","div","Terminal","Dr","File","a","Words","Grid","TopBar","TextBox","input","Helper","Dot","span","props","css","color","Title","state","curTime","Date","toLocaleString","Fragment","this","activeClass","to","spy","smooth","offset","duration","href","target","autoFocus","onfocus","React","Component","CardArea","Card","NavLink","Img","img","CardTitle","CardDescription","Cards","src","whattowear","ships","Item","Navbar","Core","Section","Header","Flavor","Text","Link","Buttons","ul","HotButton","button","Disclaimer","Input_","Text_","textarea","Submit_","Body","subject","body","handleSubject","bind","handleBody","event","setState","value","id","placeholder","onChange","rows","WhatToWear","App","history","push","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.224da862.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whattowear.14c86f32.png\";","module.exports = __webpack_public_path__ + \"static/media/ships.3b8d9c94.png\";","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from \"react-scroll\";\nconst TitleDiv = styled.div `\n  position: fixed;\n  color: white;\n  top: 0px;\n  height: 100vh;\n  width: 100%;\n  display: block;\n  font-weight: 400;\n  text-decoration:none;\n  background-color: #00a3f5;  \n`;\n\nconst Terminal = styled.div`\n  position: fixed;\n  top: 20%;\n  left: 15%;\n  height: 60%;\n  margin: auto;\n  width: 70%;\n  background-color: black;  \n  border-radius: 8px;\n  @media(max-width: 768px) {\n    width: 100%;\n    left: 0;\n    top: 0;\n    margin: 0 auto;\n    height: 80%;\n  }\n`;\nconst Dr = styled.div`\n  color: #5770ff;\n  display: block;\n  width: 200px;\n  height: 50px;\n  &:hover {\n    cursor: pointer;\n    text-decoration: underline;\n    \n  }\n  @media(max-width: 768px) {\n    width: 100%;\n    margin: 20px;\n    margin-left: 0;\n    height: 100%;\n  }\n  \n`;\nconst File = styled.a`\n  text-decoration: none;\n  margin-right: 40px;\n  color: #86ff57;\n  &:hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n  @media(max-width: 768px) {\n    margin: 20px;\n    margin-left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\nconst Words = styled.div`\n  line-height: 100%;\n  font-size: 28px;\n  margin: -10px 20px;\n  padding: 0;\n  font-family: 'Source Code Pro', monospace;\n\n  @media(max-width: 768px) {\n    font-size: 20px;\n  }\n`;\nconst Grid = styled.div `\n  width: 600px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media(max-width: 768px) {\n    width: 300px;\n  }\n`;\nconst TopBar = styled.div`\n  background-color: #2d2d2d;\n  width: 100%;\n  height: 30px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\nconst TextBox = styled.input `\n  width: 20%;\n  color: white;\n  background-color: black;\n  font-size: 28px;\n  font-family: 'Source Code Pro', monospace;\n  border-style: solid;\n  border-color: #363636;\n  border-width: 2px;\n  border-radius: 6px;\n  padding: 4px;\n  &:focus {\n    border-style: none;\n    outline: none;\n  }\n  @media(max-width: 768px) {\n    display: none;\n  }\n\n`;\nconst Helper = styled.div `\n  posistion: fixed;\n  width: 100%;\n  height: 10%;\n  text-align: center;\n  color: white;\n  font-size: 40px;\n  font-weight: 800;\n  padding: 8px;\n  margin: 90vh auto 0 auto;\n  color: white;\n  border-radius: 8px;\n  @media(max-width: 768px) {\n    font-size: 32px;\n  }\n`;\n\nconst dynamicStyle = props => \n  css`\n    background-color: ${props.color};\n  `;\n\nconst Dot = styled.span`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  display: inline-block;\n  margin: 6px;\n  ${dynamicStyle};\n`;\nclass Title extends React.Component {\n  state={curTime : new Date().toLocaleString()}\n\n\n  render () {\n    return (\n    <React.Fragment>\n      <TitleDiv>\n        <Helper>Or just scroll</Helper>\n        <Terminal>\n          <TopBar>\n            <Dot color=\"#ff4036\"/>\n            <Dot color=\"#e5c02a\"/>\n            <Dot color=\"#55c22a\"/>\n          </TopBar>\n          <Words>\n            <p>Last Login: {this.state.curTime} on console</p>\n            <p>Your-Machine:~ main$ ls </p>\n            <Grid>\n              <Link\n                      activeClass=\"active\"\n                      to=\"about\"\n                      spy={true}\n                      smooth={true}\n                      offset={0}\n                      duration={400}>\n              <Dr>about</Dr>\n              </Link>\n              <Link\n                      activeClass=\"active\"\n                      to=\"projects\"\n                      spy={true}\n                      smooth={true}\n                      offset={0}\n                      duration={400}>\n              <Dr>projects</Dr>\n              </Link>\n              <Link\n                      activeClass=\"active\"\n                      to=\"contact\"\n                      spy={true}\n                      smooth={true}\n                      offset={0}\n                      duration={400}>\n              <Dr>contact</Dr>\n              </Link>\n              <File href=\"https://github.com/gregoryblood/gregoryblood.github.io/blob/master/website/resume.pdf\" target=\"_blank\">resume.pdf</File>\n              <File href = \"mailto: gregoryblood1998@gmail.com\">e-mail.exe</File>\n            \n            </Grid>\n            <br/>\n            <p>Your-Machine:~ main$ <TextBox autoFocus=\"autofocus\" onfocus=\"this.select()\"></TextBox></p>\n            \n\n          </Words>\n        </Terminal>\n\n      </TitleDiv>\n      \n      \n    </React.Fragment>\n  );\n  }\n}\n\nexport default Title;\n","import React from 'react';\nimport styled from '@emotion/styled'\nimport whattowear from '../Images/whattowear.png'\nimport ships from '../Images/ships.png'\nimport { useRouteMatch, Switch, Route, NavLink } from 'react-router-dom';\n\n\nconst CardArea = styled.div`\n  display: flexbox;\n  flex-wrap: wrap;\n  text-align: center;\n  width: 100%;\n  max-width: 1200px;\n  align-items: center;\n\n`;\nconst Card = styled(NavLink)`\n  text-decoration: none;\n  background: transparent;\n  width: 300px;\n  height: 200px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst Img = styled.img `\n  position: relative;\n  z-index: 2;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  transition-duration: 0.4s;\n  -webkit-transition-duration: 0.4s;\n  &:hover {\n    opacity: 0.35;\n    filter: blur(8px);\n    -webkit-filter: blur(4px);\n  }\n  @media(max-width: 768px) {\n    opacity: 0.35;\n    filter: blur(8px);\n    -webkit-filter: blur(4px);\n  }\n`;\nconst CardTitle = styled.div `\n  z-index: 1;\n  position: relative;\n  top: -80%;\n  font-size: 28px;\n  font-weight: 800;\n  color: black;\n`;\nconst CardDescription = styled.div `\n  z-index: 1;\n  width: 95%;\n  margin: auto;\n  position: relative;\n  top: -70%;\n  font-size: 18px;\n  color: black;\n`;\n\nfunction Cards() {  \n  return (\n    <CardArea>\n        \n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>WhatToWear</CardTitle>\n          <CardDescription>\n          The most fail-safe weather app.\n          </CardDescription>\n        </Card>\n        <Card to={`/whattowear`}>\n          <Img src={ships}/>\n          <CardTitle>Ships!</CardTitle>\n          <CardDescription>\n          A party game for pirate lovers\n          </CardDescription>\n        </Card>\n        {/*\n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Oblivion</CardTitle>\n          <CardDescription>\n          Physics, puzzles, horror.\n          </CardDescription>\n        </Card>\n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Nature Simulation</CardTitle>\n          <CardDescription>\n          Nature simulating machine learning\n          </CardDescription>\n        </Card>\n        \n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Affair of Honor</CardTitle>\n          <CardDescription>\n          A party game for competitive people\n          </CardDescription>\n        </Card>\n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Master Blaster</CardTitle>\n          <CardDescription>\n          Retro game with a twist\n          </CardDescription>\n        </Card>\n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Pure Honey</CardTitle>\n          <CardDescription>\n          A place to buy honey\n          </CardDescription>\n        </Card>\n        <Card to={`/whattowear`}>\n          <Img src={whattowear}/>\n          <CardTitle>Spotify App</CardTitle>\n          <CardDescription>\n          Organize your music... fast\n          </CardDescription>\n        </Card>\n        */}\n        \n    </CardArea>\n  );\n}\n\nexport default Cards;","import React, {useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from \"react-scroll\";\n\n\nconst Item = styled.div`\n    position: fixed;\n    width: 100%;\n    \n    text-decoration: none;\n    display: block;\n    color: #00a3f5;\n    text-align: center;\n    font-size: 48px;\n    font-weight: bold;\n    text-decoration: none;\n    border-radius: 50%;\n    border-style: solid;\n    border-color: #00a3f5;\n    border-width: 4px;\n    height: 50px;\n    width: 50px;\n    padding: 10px;\n    margin: 10px;\n    line-height: 100%;\n    z-index: 10;\n\n    &:hover {\n        background-color: #00a3f5;\n        color: white;\n        cursor: pointer;\n    }\n    @media(min-width: 769px) {\n        top: 30px;\n        right: 10px;\n    }\n    @media(max-width: 768px) {\n        height: 30px;\n        width: 30px;\n        bottom: 7px;\n        left: 7px;\n        line-height: 60%;\n        \n\n    }\n\n`;\n\nconst Navbar=() => {\n   return (\n    <React.Fragment>\n            <Link\n                    activeClass=\"top\"\n                    to=\"top\"\n                    spy={true}\n                    smooth={true}\n                    offset={-0}\n                    duration={500}>\n                    <Item><div>^</div></Item>\n                    </Link>\n        </React.Fragment>\n   )\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport Cards from './Cards';\nimport Navbar from './Navbar';\nimport { render } from 'react-dom';\n\nconst color = 'white';\nconst mainText = 'black';\nconst flavorText = \"gray\"\nconst flavorColor = \"#20a3fa\"\n\nconst Core = styled.div `\n  position: relative;\n  top: 100vh;\n  margin: 40px auto 0 auto;\n  padding: 0 0 1000px 0;\n  width: 100%;\n  background: ${color};\n  box-shadow: 8px 0 16px 0 rgba(0,0,0,0.6);\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\nconst Section = styled.div `\n  margin: 40px auto 40px auto;\n  padding 50px 20px;\n  overflow: visible;\n  max-width: 900px;\n  color: ${mainText};\n\n`;\nconst Header = styled.div `\n  font-weight: 800;\n  font-size: 36px;\n  \n`;\nconst Flavor = styled.div `\n  padding: 10px 0;\n  font-size: 20px;\n  font-style: italic;\n  color: ${flavorText};\n`;\nconst Text = styled.div `\n  font-size: 24px;\n`;\nconst CardArea = styled.div `\n  margin: 0;\n  padding: 0;\n`;\nconst Link = styled.a `\n  text-decoration: none;\n  color: ${flavorColor};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst Buttons = styled.ul `\n  list-style-type: none;\n  margin: 40px 0 0 0;\n  overflow: visible;\n  text-align: center;\n`;\nconst HotButton = styled.button `\n  text-decoration: none;\n  border-style: solid;\n  border-color: white;\n  border-width: 4px;\n  border-radius: 8px;\n  \n  display: inline-block;\n  padding: 30px 50px;\n  font-size: 22px;\n  color: white;\n  background-color: #1c1c1c;\n  width: 200px;\n  margin: 20px 40px 0 0px;\n  transition-duration: 0.4s;\n  -webkit-transition-duration: 0.4s;\n  &:hover {\n    cursor: pointer;\n    border-color: ${flavorColor};\n    color: black;\n    background-color: white;\n  }\n  \n`;\nconst Disclaimer = styled.div `\n  font-size: 24px;\n  font-weight: bold;\n  color: red;\n  text-align: center;\n  padding: 40px 0;\n`;\nconst Input_ = styled.input `\n  width: 100%;\n  height: 40px;\n  border: 2px solid ${flavorColor};\n  border-radius: 8px;\n  font-size: 24px;\n  margin: 10px 0;\n  padding: 4px;\n  &:focus {\n    outline: none !important;\n  }\n`;\nconst Text_ = styled.textarea `\n  width: 100%;\n  height: 80px;\n  border: 2px solid ${flavorColor};\n  font-weight: 600;\n  font-family: inherit;\n  border-radius: 8px;\n  font-size: 24px;\n  \n  margin: 10px 0;\n  padding: 4px;\n  resize: none;\n  overflow: auto;\n  \n\n  &:focus {\n    outline: none !important;\n  }\n`;\nconst Submit_ = styled.a `\n  display: block;\n  text-align: center;\n  width: 100%;\n  border: 2px solid ${flavorColor};\n  border-radius: 8px;\n  background: white;\n  margin: 20px auto;\n  padding: 10px 0;\n  font-weight: bold;\n  font-size: 24px;\n  font-family: inherit;\n  color: black;\n  text-decoration: none;\n  &:hover {\n    background-color: ${flavorColor};\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nexport class Body extends React.Component{  \n  constructor(props) {\n    super(props);\n    this.state = {\n      subject: '',\n      body: ''\n    };\n    this.handleSubject = this.handleSubject.bind(this);\n    this.handleBody = this.handleBody.bind(this);\n  }\n  handleSubject(event) {\n    this.setState({subject: event.target.value});\n  }\n  handleBody(event) {\n    this.setState({body: event.target.value});\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <span id=\"top\"/>\n        <Navbar/>\n        <Core>\n          <Section id=\"about\">\n            <Header>Who am I?</Header>\n            <Flavor>Half human, half code monkey</Flavor>\n            <Text>\n              I am a Senior at <Link href={'https://oregonstate.edu/'} target={'_blank'}>Oregon State University</Link> studying \n              Computer science and I'm eager to work with teams to solve real world problems.<br/><br/>\n              When I'm away from the computer I enjoy fishing, camping, and thinking about my \n              computer. I also spend a bit of my free time making games with Unity or playing \n              them with my friends.<br/><br/>\n              Check out my resumé for some technologies I've been working with.\n            </Text>\n            <Buttons>\n              <a href=\"https://github.com/gregoryblood/gregoryblood.github.io/blob/master/website/resume.pdf\" target=\"_blank\"><HotButton>Resumé</HotButton></a>\n              <a href=\"https://www.linkedin.com/in/gregoryblood\" target=\"_blank\"><HotButton>LinkedIn</HotButton></a>\n              <a href=\"https://github.com/gregoryblood\" target=\"_blank\"><HotButton>GitHub</HotButton></a>\n            </Buttons>\n          </Section>\n          <Section id=\"projects\">\n            <Header>What have I worked on?</Header>\n            <Flavor>Bit of this, a byte of that...</Flavor>\n            <Disclaimer>I'm still working on uploading my projects</Disclaimer>\n            <CardArea>\n              <Cards/>\n            </CardArea>\n          </Section>\n          <Section id=\"contact\">\n            <Header>Send me a message!</Header>\n            <Flavor>Especially if you have a job opportunity</Flavor>\n            <Text>Have a comment on the website? Have a specific question? Just want to talk? Email me!</Text>\n              <Input_ value = {this.state.value} placeholder='Subject' onChange={this.handleSubject}/><br/>\n              <Text_ rows=\"4\" value={this.state.value} placeholder= 'Body' onChange={this.handleBody}/>\n            <Submit_ href={`mailto: gregoryblood1998@gmail.com?subject=${this.state.subject}&body=${this.state.body}`}>Send!</Submit_> \n          </Section>\n        </Core>\n      </React.Fragment>\n      \n    );\n\n  };\n}\n\nexport default Body;\n","import React from 'react';\nimport styled from '@emotion/styled'\n\n\nfunction WhatToWear() {  \n  return (\n    <React.Fragment>\n        <h1>Hello</h1>\n    </React.Fragment>\n    \n  );\n}\n\nexport default WhatToWear;","import React from 'react';\nimport Title from './Components/Title'\nimport Body from './Components/Body'\nimport { useRouteMatch, Switch, Route} from 'react-router-dom';\nimport WhatToWear from './Pages/whattowear';\n\n\n\nclass App extends React.Component  {\n\n  componenDidMount() {\n    this.props.history.push('/home');\n }\n\n  render() {\n    return (\n      <div>\n        <Switch >\n          <Route path=\"/whattowear\">\n            <WhatToWear/>\n          </Route>\n          <Route path=\"/\">\n            <Title/>\n            <Body/>\n          </Route>\n        </Switch>\n        \n      </div>\n    );\n  }\n}\n//<Navbar/>\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}